# build the code

# Stage 1: Build stage
# Use a base image to build the Java 8 version source code
FROM maven:3.9.8-eclipse-temurin-8 AS builder

# Set up working directory for container
WORKDIR /app

# Copy the Maven settings first to utilize caching
COPY pom.xml ./

# Download dependencies, this helps leverage Docker layer caching
RUN mvn dependency:go-offline

# Copy the rest of the source code
COPY . .

# Build the code
RUN mvn package 

# Stage 2: Runtime stage
# Use a slim JRE image for running the application
# FROM eclipse-temurin:8-jre-alpine

# Create a non-root user and switch to it
# RUN addgroup -S appgroup && adduser -S appuser -G appgroup
# USER appuser

# Set up working directory for container
# WORKDIR /app

# Copy the JAR file from the build stage
# COPY --from=builder /app/target/*.jar ./app.jar

# Expose the port your application runs on
# EXPOSE 8080

# Command to run the application
# CMD ["java", "-jar", "app.jar"]
